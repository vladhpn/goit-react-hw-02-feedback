{"version":3,"sources":["Feedback/Controls.jsx","Feedback/Statistics.jsx","Feedback/Feedback.jsx","App.js","index.js"],"names":["useStyles","createUseStyles","button","display","justifyContent","textDecoration","color","backgroundColor","title","textAlign","paddingTop","buttonContainer","Controls","options","onLeaveFeedback","styles","className","map","option","type","data-action","onClick","section","list","padding","listStyle","item","marginRight","boxShadow","transition","Statistics","good","neutral","bad","total","positiveFeedback","Feedback","state","target","dataset","action","setState","prevState","totalQuantityOfFeedbacks","countPositiveFeedbackPercentage","Math","round","this","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab5905f4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {createUseStyles} from 'react-jss'\n\nconst useStyles = createUseStyles({\n    button: {\n        display: 'flex',\n        justifyContent: 'center',\n        textDecoration: 'none',\n        color: 'white',\n        display: 'inline-block',\n        padding: [15, 30],\n        border: [1, 'solid'],\n        borderImage: 'linear-gradient(180deg, #ff3000, #ed0200, #ff096c, #d50082)',\n        borderImageSlice: 1,\n        margin: [10, 20],\n        outline: 'none',\n        backgroundColor: '#1D1B26',\n        textTransform: 'uppercase',\n        letterSpacing: 2,\n        transition: '.8s cubic-bezier(.165, .84, .44, 1)',\n        '&:hover':{\n            backgroundColor: 'rgba(255, 255, 255, 0)',\n            color: '#1D1B26',\n        },\n    },\n    title:{ \n        textAlign:'center',\n        paddingTop: 30,\n    },\n    buttonContainer:{\n        textAlign: 'center',\n    }\n})\n\nconst Controls = ({options, onLeaveFeedback}) => {\n    const styles = useStyles();\n\n    return (<>\n    \n        <h1 className={styles.title}>Please leave feedback</h1>\n    <div className={styles.buttonContainer}> \n      {options.map(option => (\n               <button\n                   type=\"button\"\n                   data-action={option}\n                   onClick={onLeaveFeedback}\n                   className={styles.button}\n                   key={option}>\n                       {option}\n               </button>\n           ))}\n    </div>\n    </>\n    )}\n    \n    Controls.propTypes ={\n        options: PropTypes.array,\n        onLeaveFeedback: PropTypes.func.isRequired\n    }\n\n\nexport default Controls;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {createUseStyles} from 'react-jss'\n\nconst useStyles = createUseStyles({\n    section:{\n        textAlign: 'center',\n    },\n    list:{\n        padding: 0,\n        listStyle: 'none',\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    item:{\n        padding: [10, 10],\n        color: 'white',\n        backgroundColor: '#1D1B26',\n        marginRight: 5,\n        boxShadow: [0, 5, 5, 0, 'rgba(0,0,0, .2)'],\n        transition: '.8s cubic-bezier(.165, .84, .44, 1)',\n        '&:hover':{\n            backgroundColor: 'rgba(255, 255, 255, 0)',\n            color: '#1D1B26',\n        },\n    }\n\n})\n\nconst Statistics = ({good, neutral, bad, total, positiveFeedback}) => {\n\n    const styles = useStyles();\n\n    return(\n        <>\n    <div className={styles.section}>\n    <h2>Statistics</h2>\n            \n            {total === 0 ? <p>No feedback given</p> : <ul className={styles.list}>\n                <li className={styles.item}>Good: {good}</li>\n                <li className={styles.item}>Neutral: {neutral} </li>\n                <li className={styles.item}>Bad: {bad}</li>\n                <li className={styles.item}>Total: {total}</li>\n                <li className={styles.item}>Positive Feedback: {positiveFeedback}</li>\n            </ul>}\n            </div>\n    </>\n    )\n};\n\nStatistics.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positiveFeedback: PropTypes.string.isRequired\n}\n\nexport default Statistics;","import React, {Component} from 'react';\nimport Controls from './Controls';\nimport Statistics from './Statistics';\nimport 'modern-normalize/modern-normalize.css';\n\n\n\nclass Feedback extends Component {\n\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,   \n    };\n\n    onLeaveFeedback = ({target}) => {\n\t\tconst type = target.dataset.action;\n\t\tthis.setState((prevState) => ({\n\t\t\t[type]: prevState[type] + 1\n\t\t}));\n\t};\n\n\n    totalQuantityOfFeedbacks = () => {\n        const { good, neutral, bad } = this.state;\n    \n       return good + neutral + bad;\n        \n      };\n\n      countPositiveFeedbackPercentage = () => {\n        const {good} = this.state;\n        const total = this.totalQuantityOfFeedbacks();\n        if (total) {\n            return `${Math.round((good / total) * 100)}%`;\n          }\n          return '0%';\n      }\n    \n    render() {\n       \n        const options = ['good', 'neutral', 'bad'];\n        const {good, neutral, bad} = this.state;\n        const total = this.totalQuantityOfFeedbacks();\n        const positiveFeedback = this.countPositiveFeedbackPercentage();\n\n        return (<>\n      \n\n        <Controls options={options} onLeaveFeedback={this.onLeaveFeedback} />\n\n        <Statistics good={good} neutral={neutral} bad={bad}\n            total={total} positiveFeedback={positiveFeedback}/>\n        \n            </>)\n    }\n}\n\nexport default Feedback;","import React from 'react';\nimport Feedback from './Feedback';\n\n\nfunction App() {\n  return <Feedback />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}